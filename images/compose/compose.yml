version: '3'
services:
  postgres:
    image: "docker.io/library/postgres:13"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: pulp
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pulp
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256'
      POSTGRES_HOST_AUTH_METHOD: 'scram-sha-256'
    volumes:
      - "pg_data:/var/lib/postgresql"
      - "./assets/postgres/passwd:/etc/passwd:Z"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pulp" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: "docker.io/library/redis:latest"
    volumes:
      - "redis_data:/data"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pulp_web:
    image: "pulp/pulp-web:latest"
    command: ['/usr/bin/nginx.sh']
    depends_on:
      pulp_api:
      pulp_content:
    ports:
      - "8080:8080"
    hostname: pulp
    user: root
    volumes:
      - "./assets/bin/nginx.sh:/usr/bin/nginx.sh:Z"
      - "./assets/nginx/nginx.conf.template:/etc/opt/rh/rh-nginx116/nginx/nginx.conf.template:Z"
    restart: always

  pulp_api:
    image: "pulp/pulp-minimal:latest"
    deploy:
      replicas: 2
    command: ['pulp-api']
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    hostname: pulp-api
    user: pulp
    volumes:
      - "./assets/settings.py:/etc/pulp/settings.py:z"
      - "./assets/certs:/etc/pulp/certs:z"
      - "pulp:/var/lib/pulp"
    environment:
      PULP_DEFAULT_ADMIN_PASSWORD: password
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "readyz.py /pulp/api/v3/status/" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pulp_content:
    image: "pulp/pulp-minimal:latest"
    deploy:
      replicas: 2
    command: ['pulp-content']
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    hostname: pulp-content
    user: pulp
    volumes:
      - "./assets/settings.py:/etc/pulp/settings.py:z"
      - "./assets/certs:/etc/pulp/certs:z"
      - "pulp:/var/lib/pulp"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "readyz.py /pulp/content/" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pulp_worker:
    image: "pulp/pulp-minimal:latest"
    deploy:
        replicas: 2
    command: ['pulp-worker']
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    user: pulp
    volumes:
      - "./assets/settings.py:/etc/pulp/settings.py:z"
      - "./assets/certs:/etc/pulp/certs:z"
      - "pulp:/var/lib/pulp"
    restart: always

volumes:
  pulp:
    name: pulp${DEV_VOLUME_SUFFIX:-dev}
  pg_data:
    name: pg_data${DEV_VOLUME_SUFFIX:-dev}
  redis_data:
    name: redis_data${DEV_VOLUME_SUFFIX:-dev}
